[{"/Users/brycejames/Desktop/YouFindMyTopic/static/src/index.js":"1","/Users/brycejames/Desktop/YouFindMyTopic/static/src/reportWebVitals.js":"2","/Users/brycejames/Desktop/YouFindMyTopic/static/src/App.js":"3","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/GlobalNav.js":"4","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/SearchArea.js":"5","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/VideoList.js":"6","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/Login.js":"7"},{"size":270,"mtime":1608961166376,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608350379453,"results":"10","hashOfConfig":"9"},{"size":4057,"mtime":1609268894351,"results":"11","hashOfConfig":"9"},{"size":2027,"mtime":1608961511816,"results":"12","hashOfConfig":"9"},{"size":8658,"mtime":1609271853240,"results":"13","hashOfConfig":"9"},{"size":14675,"mtime":1609271960737,"results":"14","hashOfConfig":"9"},{"size":4463,"mtime":1609267017702,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1tyeja3",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},"/Users/brycejames/Desktop/YouFindMyTopic/static/src/index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["36","37"],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/reportWebVitals.js",[],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/App.js",["38","39","40","41","42","43","44","45","46","47"],"import logo from './logo.svg';\nimport './App.css';\nimport GlobalNav from './components/GlobalNav';\nimport SearchArea from './components/SearchArea';\nimport VideoList from './components/VideoList';\nimport {useState, useEffect} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from './components/Login';\n\nvar timer = {}\n\nconst useStateWithLocalStorage =  CacheKey => {\n  const [value, setValue] = useState(\n    localStorage.getItem(CacheKey) || ''\n  );\n \n  useEffect(() => {\n    localStorage.setItem(CacheKey, value);\n  }, [value]);\n \n  return [value, setValue];\n};\n\nfunction App() {\n  \n  let payload = {}\n  let userpayload = {}\n  let VideoCache = {}\n\n  const [showVideo, setVideo] = useState(false)\n  const [obj, setObj] = useState([])\n  const [canFetch, setFetch] = useState(false)\n  \n  const [user, setUser] = useStateWithLocalStorage(\n    \"Currentuser\"\n  )\n\n\n  const [loggedIn, setLogin] = useStateWithLocalStorage(\n    \"SignedIn\"\n  )\n\n  const [time, setTime] = useStateWithLocalStorage(\n    \"SessionTimeout\"\n  )\n \n  const updateVideoList = (answer) =>{\n    setVideo(answer)\n  }\n\n var myinterval = 10000;\n \n var thread = 0\n      \n/*setInterval(()=>{\n    if(!canFetch){\n      setFetch(true)\n    } \n        var tempPayload = {User: user}\n        if(canFetch){\n          fetch(\"/hello\",{\n                  method: \"POST\",\n                  headers: {\n                      'Accept': 'application/json',\n                      \"Content-Type\": \"application/json\",\n                      \"Content-Type\": \"text/html; charset=utf-8\"\n                  },\n                  body: JSON.stringify(tempPayload),\n              }).then(res => {\n                  res.text().then(text =>{\n                      var arr = null\n                      arr = JSON.parse(text);\n                      if(localStorage.getItem(\"SignedIn\") === true){\n                        setLogin(true)\n                      }\n                      \n                      if(localStorage.getItem(\"Videos\") !== null && arr.SessionTime % 2000 == 0){\n                        setObj(JSON.parse(localStorage.getItem(\"Videos\")))\n                      }\n                      \n                      //console.log(arr.SessionTime)\n                      if(arr.SessionTime>=60000){\n                        localStorage.removeItem(\"SignedIn\")\n                        localStorage.removeItem(\"SessionTimeout\")\n                        localStorage.removeItem(\"Currentuser\")\n                        localStorage.removeItem(\"Videos\")\n                        setLogin(false)\n                        setUser(\"\")\n                        setTime(\"\")\n                        console.log(localStorage.getItem(\"SignedIn\"))\n                        console.log(localStorage.getItem(\"SessionTimeout\"))\n                        console.log(localStorage.getItem(\"Currentuser\"))\n                      }else{\n                        localStorage.setItem(\"SessionTimeout\", arr.SessionTime)\n                      }                    \n                  })\n              })\n              setFetch(false)\n            }\n  },myinterval);*/\n\n  const resetStorage = () =>{\n      \n      \n  }\n\n  return(\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">  \n          <Login set = {setUser} user = {user} userload = {userpayload} logged = {loggedIn} setLogged = {setLogin} setTime = {setTime}></Login>\n        </Route>\n        <Route path=\"/VideoList\">\n          <VideoList videos = {obj} user = {user} setUser = {setUser} show = {showVideo} status = {updateVideoList} Setobj = {setObj} oj = {obj} loggedIn = {loggedIn} setLogged = {setLogin} setTime = {setTime}></VideoList>\n        </Route>\n        <Route path = \"/search\">\n          <SearchArea user = {user} setUser = {setUser} load = {payload} videos = {obj} Setobj = {setObj} show = {showVideo} status = {setVideo} Setoj = {setObj} oj = {obj} time = {time} setTime = {setTime} loggedIn = {loggedIn} setLogged = {setLogin}></SearchArea>\n        </Route>\n      </Switch>\n    </Router>\n  )\n  \n}\n\nexport default App;\n","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/GlobalNav.js",["48"],"import React, {Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Navbar, NavDropdown, Nav} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\";\nexport default class GlobalNav extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    NavStyle = {\n        color: \"whote\",\n        textDecoration: \"none\"\n    }\n\n    /*componentDidMount(props){\n        if(!localStorage.getItem(\"SessionTimeout\") < 1){\n            localStorage.setItem(\"SessionTimeout\", 1)\n            this.CheckSession\n        }else{\n            this.CheckSession\n        }\n    }*/\n\n\n\n    render(){  \n        return(\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand>\n                    <Link to=\"/Search\" style={{color: 'white', textDecoration: 'none'}}>\n                        YouGo\n                    </Link>\n                </Navbar.Brand>\n                <NavDropdown.Divider />\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                     \n                    <Nav className=\"m-auto p-auto mr-auto NavStyle\">\n                            <Nav.Link>\n                                <Link to=\"/VideoList\" style={{color: 'white', textDecoration: 'none'}}>\n                                    Videos \n                                </Link>\n                            </Nav.Link>\n                       \n                            <Nav.Link>\n                                <Link to=\"/search\" style={{color: 'white', textDecoration: 'none'}}>\n                                    Search\n                                </Link>\n                            </Nav.Link>\n                    </Nav>\n\n                    <NavDropdown.Divider />\n\n                    <Nav>\n                        <Nav.Link href=\"#UserProfile\">User: {this.props.user}</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/SearchArea.js",["49","50","51","52","53"],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/VideoList.js",["54","55"],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/Login.js",["56","57"],"import React,{Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport {Form, Button} from 'react-bootstrap'\nimport {Link, withRouter} from \"react-router-dom\";\nimport GlobalNav from \"./GlobalNav\"\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n        this.currentInput = \"\"\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n   \n\n    getUserName = (name) =>{\n        this.props.set(name)\n        this.props.setLogged(true)\n        console.log(this.props.logged)\n        this.props.userload.id = name\n        fetch(\"/userpass\",{\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"false\"\n            },\n            body: JSON.stringify(this.props.userload),\n        }).then(resp =>{\n            if(resp.status === 401){\n                alert(\"This username is currently being used. Please try again later or use another name.\")\n            }else{\n                localStorage.setItem(\"SessionTimeout\", 0)\n                setTimeout(alert(\"You are all set, \"+name+\"!\"),2000)\n                resp = resp.text()\n                console.log(resp)\n                this.props.history.push('/search');\n            }\n        })\n    }\n\n    handleClick = (Login) =>{\n        Login.preventDefault()\n        this.getUserName(this.currentInput)\n        Login.cancelBubble = true;\n    }\n\n    \n    render(){\n        if(this.props.logged === false || this.props.logged === null || localStorage.getItem(\"SessionTimeout\") === \"0\"){\n            return(\n                <>\n                    <div className = \"m-auto p-3\" style = {{backgroundColor: \"#282c34\", textAlign: \"center\", height: '100vh', minHeight: '100vh'}}>\n                        <br></br><br></br><br></br><br></br><br></br>\n                        <Form>\n                            <Form.Label className = \"p-2 m-auto\" style = {{color: \"white\", fontSize: \"40px\"}}>Welcome to YouGo!</Form.Label>\n                            <br></br><br></br><br></br>\n                            <Form.Group controlId=\"login\">\n                                <Form.Control className=\"m-auto\" style = {{width:\"70vw\"}} type=\"text\" placeholder=\"\" onChange={UserLog => this.currentInput = UserLog.target.value}/>\n                                <Form.Text className=\"blockquote p-4 m-auto\" style={{color: \"white\"}}>\n                                    Enter a name so we can keep track of your searches \n                                </Form.Text>\n                            </Form.Group>\n\n                           \n                                <Button variant=\"outline-light\" type=\"submit\" value = \"Submit\" onClick = {(Login) => {this.handleClick(Login); this.props.setTime(0)}}>\n                                    Start searching!\n                                </Button>\n                    \n                        \n                        </Form>\n\n                        \n                        <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                            <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                        </div>\n                    </div>\n                    \n                </>\n            )}else{\n                return(\n                    <>\n                        <GlobalNav></GlobalNav>  \n                        <div className = \"m-auto p-2\" style = {{backgroundColor:\"#282c34\", border: \"none\", textAlign: \"center\", color:\"white\", height: '100vh', minHeight: '100vh'}}>\n                            <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n                            <h2>Hey {this.props.user}, it looks like you are signed in.</h2>   \n                            <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                                <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                            </div>\n                        </div>\n                       \n                        \n                \n                    </>\n                )\n            }\n        \n        // <Button variant=\"outline-light\" type=\"submit\" onClick = {this.getUserName(this.currentInput)}>\n       // Start searching!\n        //</Button>\n    }\n}\nexport default withRouter(Login)",{"ruleId":"58","severity":1,"message":"59","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":23},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"67","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":14,"column":5,"nodeType":"60","messageId":"61","endLine":14,"endColumn":10},{"ruleId":"69","severity":1,"message":"70","line":23,"column":6,"nodeType":"71","endLine":23,"endColumn":13,"suggestions":"72"},{"ruleId":"58","severity":1,"message":"73","line":32,"column":7,"nodeType":"60","messageId":"61","endLine":32,"endColumn":17},{"ruleId":"58","severity":1,"message":"74","line":36,"column":10,"nodeType":"60","messageId":"61","endLine":36,"endColumn":18},{"ruleId":"58","severity":1,"message":"75","line":36,"column":20,"nodeType":"60","messageId":"61","endLine":36,"endColumn":28},{"ruleId":"58","severity":1,"message":"76","line":55,"column":6,"nodeType":"60","messageId":"61","endLine":55,"endColumn":16},{"ruleId":"58","severity":1,"message":"77","line":57,"column":6,"nodeType":"60","messageId":"61","endLine":57,"endColumn":12},{"ruleId":"58","severity":1,"message":"78","line":106,"column":9,"nodeType":"60","messageId":"61","endLine":106,"endColumn":21},{"ruleId":"79","severity":1,"message":"80","line":6,"column":5,"nodeType":"81","messageId":"82","endLine":8,"endColumn":6},{"ruleId":"58","severity":1,"message":"83","line":4,"column":15,"nodeType":"60","messageId":"61","endLine":4,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":29,"column":21,"nodeType":"86","messageId":"87","endLine":29,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":44,"column":90,"nodeType":"90","messageId":"87","endLine":44,"endColumn":92},{"ruleId":"84","severity":1,"message":"85","line":100,"column":25,"nodeType":"86","messageId":"87","endLine":100,"endColumn":39},{"ruleId":"88","severity":1,"message":"89","line":150,"column":83,"nodeType":"90","messageId":"87","endLine":150,"endColumn":85},{"ruleId":"84","severity":1,"message":"85","line":52,"column":25,"nodeType":"86","messageId":"87","endLine":52,"endColumn":39},{"ruleId":"88","severity":1,"message":"89","line":63,"column":94,"nodeType":"90","messageId":"87","endLine":63,"endColumn":96},{"ruleId":"58","severity":1,"message":"91","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":9},{"ruleId":"58","severity":1,"message":"92","line":5,"column":9,"nodeType":"60","messageId":"61","endLine":5,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"'logo' is defined but never used.","'GlobalNav' is defined but never used.","'timer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CacheKey'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'VideoCache' is assigned a value but never used.","'canFetch' is assigned a value but never used.","'setFetch' is assigned a value but never used.","'myinterval' is assigned a value but never used.","'thread' is assigned a value but never used.","'resetStorage' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withRouter' is defined but never used.","no-dupe-keys","Duplicate key 'Content-Type'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'$' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [CacheKey, value]",{"range":"98","text":"99"},[580,587],"[CacheKey, value]"]