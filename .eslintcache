[{"/Users/brycejames/Desktop/YouFindMyTopic/static/src/index.js":"1","/Users/brycejames/Desktop/YouFindMyTopic/static/src/reportWebVitals.js":"2","/Users/brycejames/Desktop/YouFindMyTopic/static/src/App.js":"3","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/GlobalNav.js":"4","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/SearchArea.js":"5","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/VideoList.js":"6","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/Login.js":"7","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/HomePage.js":"8"},{"size":270,"mtime":1608961166376,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608350379453,"results":"11","hashOfConfig":"10"},{"size":2114,"mtime":1609391302672,"results":"12","hashOfConfig":"10"},{"size":1675,"mtime":1609393821890,"results":"13","hashOfConfig":"10"},{"size":8658,"mtime":1609271853240,"results":"14","hashOfConfig":"10"},{"size":8913,"mtime":1610483531791,"results":"15","hashOfConfig":"10"},{"size":4463,"mtime":1609267017702,"results":"16","hashOfConfig":"10"},{"size":1549,"mtime":1609391478512,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1tyeja3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"21"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},"/Users/brycejames/Desktop/YouFindMyTopic/static/src/index.js",["41"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["42","43"],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/reportWebVitals.js",[],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/App.js",["44","45","46","47"],"import logo from './logo.svg';\nimport './App.css';\nimport GlobalNav from './components/GlobalNav';\nimport SearchArea from './components/SearchArea';\nimport VideoList from './components/VideoList';\nimport {useState, useEffect} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport HomePage from './components/HomePage'\n\nvar timer = {}\n\nconst useStateWithLocalStorage =  CacheKey => {\n  const [value, setValue] = useState(\n    localStorage.getItem(CacheKey) || ''\n  );\n \n  useEffect(() => {\n    localStorage.setItem(CacheKey, value);\n  }, [value]);\n \n  return [value, setValue];\n};\n\nfunction App() {\n  \n  let payload = {}\n  let userpayload = {}\n\n  const [showVideo, setVideo] = useState(false)\n  const [obj, setObj] = useState([])\n  \n  const [user, setUser] = useStateWithLocalStorage(\n    \"Currentuser\"\n  )\n\n\n  const [loggedIn, setLogin] = useStateWithLocalStorage(\n    \"SignedIn\"\n  )\n\n  const [time, setTime] = useStateWithLocalStorage(\n    \"SessionTimeout\"\n  )\n \n  const updateVideoList = (answer) =>{\n    setVideo(answer)\n  }\n\n  return(\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">  \n          <Login set = {setUser} user = {user} userload = {userpayload} logged = {loggedIn} setLogged = {setLogin} setTime = {setTime}></Login>\n        </Route>\n        <Route path=\"/VideoList\">\n          <VideoList videos = {obj} user = {user} setUser = {setUser} show = {showVideo} status = {updateVideoList} Setobj = {setObj} oj = {obj} loggedIn = {loggedIn} setLogged = {setLogin} setTime = {setTime}></VideoList>\n        </Route>\n        <Route path = \"/search\">\n          <SearchArea user = {user} setUser = {setUser} load = {payload} videos = {obj} Setobj = {setObj} show = {showVideo} status = {setVideo} Setoj = {setObj} oj = {obj} time = {time} setTime = {setTime} loggedIn = {loggedIn} setLogged = {setLogin}></SearchArea>\n        </Route>\n        <Route path=\"/home\">\n          <HomePage user = {user} setLogged = {setLogin}></HomePage>\n        </Route>\n      </Switch>\n    </Router>\n  )\n  \n}\n\nexport default App;\n","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/GlobalNav.js",["48"],"import React, {Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Navbar, NavDropdown, Nav} from 'react-bootstrap'\nimport {Link} from \"react-router-dom\";\nexport default class GlobalNav extends Component{\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){  \n        return(\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand>\n                    <Link to=\"/home\" style={{color: 'white', textDecoration: 'none'}}>\n                        YouGo\n                    </Link>\n                </Navbar.Brand>\n                <NavDropdown.Divider />\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                     \n                    <Nav className=\"m-auto p-auto mr-auto\">\n                            <Nav.Link>\n                                <Link to=\"/VideoList\" style={{color: 'white'}}>\n                                    Videos \n                                </Link>\n                            </Nav.Link>\n                       \n                            <Nav.Link>\n                                <Link to=\"/search\" style={{color: 'white', textDecoration: 'none'}}>\n                                    Search\n                                </Link>\n                            </Nav.Link>\n                    </Nav>\n\n                    <NavDropdown.Divider />\n\n                    <Nav>\n                        <Nav.Link href=\"#UserProfile\">User: {this.props.user}</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/SearchArea.js",["49","50","51","52","53"],"import React,{Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Form, Button} from 'react-bootstrap'\nimport {Link, withRouter} from \"react-router-dom\";\nimport GlobalNav from './GlobalNav';\n\nclass SearchArea extends Component{\n    constructor(props){\n        super(props);\n        this.currentInput = \"\"\n        this.Index = 0\n        this.updateSearch = this.updateSearch.bind(this)\n        this.getVideoList = this.getVideoList.bind(this)\n\n        this.state={\n            userLog: this.props.loggedIn\n        }\n    }\n\n\n    componentDidMount(){\n        setTimeout(() =>{\n            var tempPayload = {User: this.props.user}\n            fetch(\"/hello\",{\n                method: \"POST\",\n                headers: {\n                    'Accept': 'application/json',\n                    \"Content-Type\": \"application/json\",\n                    \"Content-Type\": \"text/html; charset=utf-8\"\n                },\n                body: JSON.stringify(tempPayload),\n            }).then(res => {\n                res.text().then(text =>{\n                    \n                    var arr = null\n                    arr = JSON.parse(text);\n                    console.log(text)\n                    if(localStorage.getItem(\"SignedIn\") === true){\n                        this.props.setLogged(true)\n                    }\n\n                    \n                    \n                    if(localStorage.getItem(\"Videos\") !== null && arr.SessionTime % 2000 == 0){\n                        this.props.Setobj(JSON.parse(localStorage.getItem(\"Videos\")))\n                    }\n                    \n                    //console.log(arr.SessionTime)\n                    if(arr.SessionTime>=60000 || arr.SessionTime === \"0\"){\n                        localStorage.removeItem(\"SignedIn\")\n                        localStorage.removeItem(\"SessionTimeout\")\n                        localStorage.removeItem(\"Currentuser\")\n                        localStorage.removeItem(\"Videos\")\n                        this.props.setLogged(false)\n                        this.props.setUser(\"\")\n                        this.props.setTime(\"\")\n                        console.log(localStorage.getItem(\"SignedIn\"))\n                        console.log(localStorage.getItem(\"SessionTimeout\"))\n                        console.log(localStorage.getItem(\"Currentuser\"))\n                    }else{\n                        localStorage.setItem(\"SessionTimeout\", arr.SessionTime)\n                    }      \n                    \n                    \n                })\n            })\n        }, 3000)\n    \n}\n\n\n    updateSearch = () =>{\n        //this.props.load = {}\n        this.props.load.id = this.currentInput\n        this.props.load.user = this.props.user\n        fetch(\"/query\",{\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"false\"\n            },\n            body: JSON.stringify(this.props.load),\n          }).then((resp) => {\n            resp = resp.text()\n            console.log(resp)\n        })\n\n        this.getVideoList();\n    }    \n    \n    \n    getVideoList = () =>{\n            var tempPayload = {User: this.props.user}\n            setTimeout(() => {fetch(\"/hello\",{\n                    method: \"POST\",\n                    headers: {\n                        'Accept': 'application/json',\n                        \"Content-Type\": \"application/json\",\n                        \"Content-Type\": \"text/html; charset=utf-8\"\n                    },\n                    body: JSON.stringify(tempPayload),\n                }).then(res => {\n                    if(res.status === 401){\n                        localStorage.setItem(\"SessionTimeout\", \"\")\n                    }else{\n                        res.text().then(text =>{\n                            var arr = null\n                            var tempIndex = 0\n                            arr = JSON.parse(text)\n\n                            \n                            if(arr.Searches === null){\n                                setTimeout(this.getVideoList(),1000)\n                            }else{\n                                console.log(\"Okay\")\n                                tempIndex = arr.Searches.length\n                                console.log(\"RESPONSE LENGTH: \" + arr.Searches.length + \" CURRENTLENGTH: \" + this.props.videos.length)\n                                if(arr.Searches.length === this.props.videos.length){\n                                    console.log(\"WE GOING AGAIN\")\n                                    setTimeout(this.getVideoList(), 1000)\n                                }else{\n                                    console.log(\"Cool\")\n                                    this.index = tempIndex\n                                    console.log(arr.Searches)\n                                    this.props.Setoj(arr.Searches)\n                                    localStorage.setItem(\"SessionTimeout\", arr.SessionTime)\n                                    localStorage.setItem(\"Videos\", JSON.stringify(arr.Searches))\n                                }\n                            }\n                        })\n                    }\n                })\n    \n            this.props.status(\"true\")\n            //this.props.history.push('/VideoList')\n        },2000)\n    }\n    \n \n\n\n    render(){\n        //console.log(localStorage.getItem(\"SessionTimeout\"))\n        //console.log(this.props.loggedIn)       \n        /*if(this.props.loggedIn !== true){\n            this.setState({userLog: false})\n        }*/\n\n        if(this.props.loggedIn !== true && localStorage.getItem(\"SessionTimeout\") == \"0\"){\n\n            return(            \n                <div className = \"m-auto p-2\" style = {{backgroundColor:\"#282c34\", border: \"none\", textAlign: \"center\", color:\"white\", height: '100vh', minHeight: '100vh'}}>\n                    <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n                    <h3>It seems your session has expired! <br></br> <br></br> Log back in to create a new session.</h3>   \n                    <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                    <Link to=\"/\">\n                        <Button variant=\"outline-light\">\n                            Log back in\n                        </Button>\n                    </Link>\n                    <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                    </div>\n                </div>\n            )\n        }else{\n            //console.log(localStorage.getItem(\"SessionTimeout\"))\n            return(\n                <>\n                    <GlobalNav user = {this.props.user}></GlobalNav>\n                    <div className = \"m-auto p-3\" style = {{backgroundColor: \"#282c34\", textAlign:\"center\", height: '100vh', minHeight: '100vh'}}>\n                        <Form>\n                            <Form.Group controlId=\"searchbar\">\n                                <br></br>\n                                <Form.Label className = \"p-2 m-auto\" style = {{color: \"white\", fontSize: \"40px\"}}>Search for your topic</Form.Label>\n                                <br></br><br></br><br></br>\n                                <Form.Control className=\"m-auto Search\" style = {{width:\"70vw\"}} type=\"text\" placeholder=\"\" onChange={search => this.currentInput = search.target.value}/>\n                                <Form.Text className=\"blockquote p-4 m-auto\" style={{color: \"white\"}}>\n                                    Search your topic, no funny stuff.\n                                </Form.Text>\n                            </Form.Group>\n                            \n                                <Button variant=\"outline-light SearchSubmit\" type=\"submit\" onClick = {(e)=>{e.preventDefault(); this.updateSearch(this.currentInput);}}>\n                                    <Link to=\"/VideoList\" style ={{color: \"white\", textDecoration: 'none'}}>\n                                        Find videos\n                                    </Link>\n                                </Button>\n                            \n                        </Form>\n                        \n                        \n                    </div>\n                    <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                        <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                    </div>\n                </>\n            )\n        }\n                                    \n    }\n        \n}\n\n//export default withRouter(SearchArea)\nexport default SearchArea","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/VideoList.js",["54","55"],"/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/Login.js",["56","57"],"import React,{Component} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport {Form, Button} from 'react-bootstrap'\nimport {Link, withRouter} from \"react-router-dom\";\nimport GlobalNav from \"./GlobalNav\"\n\n\nclass Login extends Component{\n    constructor(props){\n        super(props);\n        this.currentInput = \"\"\n\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n   \n\n    getUserName = (name) =>{\n        this.props.set(name)\n        this.props.setLogged(true)\n        console.log(this.props.logged)\n        this.props.userload.id = name\n        fetch(\"/userpass\",{\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"false\"\n            },\n            body: JSON.stringify(this.props.userload),\n        }).then(resp =>{\n            if(resp.status === 401){\n                alert(\"This username is currently being used. Please try again later or use another name.\")\n            }else{\n                localStorage.setItem(\"SessionTimeout\", 0)\n                setTimeout(alert(\"You are all set, \"+name+\"!\"),2000)\n                resp = resp.text()\n                console.log(resp)\n                this.props.history.push('/search');\n            }\n        })\n    }\n\n    handleClick = (Login) =>{\n        Login.preventDefault()\n        this.getUserName(this.currentInput)\n        Login.cancelBubble = true;\n    }\n\n    \n    render(){\n        if(this.props.logged === false || this.props.logged === null || localStorage.getItem(\"SessionTimeout\") === \"0\"){\n            return(\n                <>\n                    <div className = \"m-auto p-3\" style = {{backgroundColor: \"#282c34\", textAlign: \"center\", height: '100vh', minHeight: '100vh'}}>\n                        <br></br><br></br><br></br><br></br><br></br>\n                        <Form>\n                            <Form.Label className = \"p-2 m-auto\" style = {{color: \"white\", fontSize: \"40px\"}}>Welcome to YouGo!</Form.Label>\n                            <br></br><br></br><br></br>\n                            <Form.Group controlId=\"login\">\n                                <Form.Control className=\"m-auto\" style = {{width:\"70vw\"}} type=\"text\" placeholder=\"\" onChange={UserLog => this.currentInput = UserLog.target.value}/>\n                                <Form.Text className=\"blockquote p-4 m-auto\" style={{color: \"white\"}}>\n                                    Enter a name so we can keep track of your searches \n                                </Form.Text>\n                            </Form.Group>\n\n                           \n                                <Button variant=\"outline-light\" type=\"submit\" value = \"Submit\" onClick = {(Login) => {this.handleClick(Login); this.props.setTime(0)}}>\n                                    Start searching!\n                                </Button>\n                    \n                        \n                        </Form>\n\n                        \n                        <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                            <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                        </div>\n                    </div>\n                    \n                </>\n            )}else{\n                return(\n                    <>\n                        <GlobalNav></GlobalNav>  \n                        <div className = \"m-auto p-2\" style = {{backgroundColor:\"#282c34\", border: \"none\", textAlign: \"center\", color:\"white\", height: '100vh', minHeight: '100vh'}}>\n                            <br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n                            <h2>Hey {this.props.user}, it looks like you are signed in.</h2>   \n                            <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                                <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                            </div>\n                        </div>\n                       \n                        \n                \n                    </>\n                )\n            }\n        \n        // <Button variant=\"outline-light\" type=\"submit\" onClick = {this.getUserName(this.currentInput)}>\n       // Start searching!\n        //</Button>\n    }\n}\nexport default withRouter(Login)","/Users/brycejames/Desktop/YouFindMyTopic/static/src/components/HomePage.js",["58","59"],"import React, {Component} from 'react'\nimport {Link} from \"react-router-dom\";\nimport GlobalNav from './GlobalNav';\nimport {Button} from 'react-bootstrap'\n\nexport default class MainPage extends Component{\n    constructor(props){\n        super(props)\n    }\n    \n    render(){\n        if(this.props.loggedIn !== true && localStorage.getItem(\"SessionTimeout\") == \"0\"){\n\n            return(            \n                <div className = \"m-auto p-2\" style = {{backgroundColor:\"#282c34\", border: \"none\", textAlign: \"center\", color:\"white\", height: '100vh', minHeight: '100vh'}}>\n                    <br></br><br></br><br></br><br></br><br></br><br></br><br></br>\n                    <h3>It seems your session has expired! <br></br> <br></br> Log back in to create a new session.</h3>   \n                    <div className=\"p-3 m-auto\" style = {{backgroundColor:\"#282c34\", border: \"none\"}}>\n                    <Link to=\"/\">\n                        <Button variant=\"outline-light\">\n                            Log back in\n                        </Button>\n                    </Link>\n                    <hr style={{color: \"white\",  width:\"40vw\", borderColor:\"white\"}} />\n                    </div>\n                </div>\n            )               \n        }else{\n            return(    \n                <>\n                    <GlobalNav user = {this.props.user}></GlobalNav>\n                    <div>\n                        <h1> Welcome to the home page!</h1>\n                    </div>\n                </>\n            )\n        }\n            \n    }\n}\n\n",{"ruleId":"60","severity":1,"message":"61","line":5,"column":8,"nodeType":"62","messageId":"63","endLine":5,"endColumn":23},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"69","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":17},{"ruleId":"60","severity":1,"message":"70","line":15,"column":5,"nodeType":"62","messageId":"63","endLine":15,"endColumn":10},{"ruleId":"71","severity":1,"message":"72","line":24,"column":6,"nodeType":"73","endLine":24,"endColumn":13,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":6,"column":5,"nodeType":"77","messageId":"78","endLine":8,"endColumn":6},{"ruleId":"60","severity":1,"message":"79","line":4,"column":15,"nodeType":"62","messageId":"63","endLine":4,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":29,"column":21,"nodeType":"82","messageId":"83","endLine":29,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":44,"column":90,"nodeType":"86","messageId":"83","endLine":44,"endColumn":92},{"ruleId":"80","severity":1,"message":"81","line":100,"column":25,"nodeType":"82","messageId":"83","endLine":100,"endColumn":39},{"ruleId":"84","severity":1,"message":"85","line":150,"column":83,"nodeType":"86","messageId":"83","endLine":150,"endColumn":85},{"ruleId":"80","severity":1,"message":"81","line":29,"column":21,"nodeType":"82","messageId":"83","endLine":29,"endColumn":35},{"ruleId":"84","severity":1,"message":"85","line":41,"column":90,"nodeType":"86","messageId":"83","endLine":41,"endColumn":92},{"ruleId":"60","severity":1,"message":"87","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":9},{"ruleId":"60","severity":1,"message":"88","line":5,"column":9,"nodeType":"62","messageId":"63","endLine":5,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":7,"column":5,"nodeType":"77","messageId":"78","endLine":9,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":12,"column":83,"nodeType":"86","messageId":"83","endLine":12,"endColumn":85},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"'logo' is defined but never used.","'GlobalNav' is defined but never used.","'timer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CacheKey'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withRouter' is defined but never used.","no-dupe-keys","Duplicate key 'Content-Type'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'$' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [CacheKey, value]",{"range":"94","text":"95"},[625,632],"[CacheKey, value]"]